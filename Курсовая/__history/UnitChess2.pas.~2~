unit UnitChess2;

interface

uses System.SysUtils;

implementation

uses Chess_Main_Form;
{
procedure MoveFigureToCell(var Board: TBoard; Figure: TFigure;
          PosX, PosY: Byte; FigureIsReal: Boolean = True);}


procedure MoveFigureToCell(var Board: TBoard; Figure: TFigure;
  PosX, PosY: Byte; FigureIsReal: Boolean = True);
var
    CoordTemp: TCoord;

begin
    with FormChessMain do
    with Figure do
    begin
        with Board[FPosOnBoardX][FPosOnBoardY] do
            CellFigureName := '0';

        if FigureIsReal then
        begin
            FPosOnBoardX := PosX;
            FPosOnBoardY := PosY;
        end
        else if Board[PosX][PosY].CellFigureName <> '0' then
            ArrOfFigures[Board[PosX][PosY].CellFigureIndex]
              .FPsevdoKilled := True;

        with Board[PosX][PosY] do
        begin
            CellFigureColorIsWhite := FIsWhite;
            CellFigureName := FFigureType;
            CellFigureIndex := FFigureInd;
        end;

        if FigureIsReal then
        begin
            CoordTemp := CountCoordinatesOfFigure(PosX, PosY);

            if NowIsCastling and (FFigureType = 'R') then
            begin
                Top := CoordTemp.Top;
                Left := CoordTemp.Left;
            end
            else
                MoveFigureWithAnimation(Figure, CoordTemp.Top, CoordTemp.Left);

            Width := MultPixels(SizeOfFigure);
            Height := MultPixels(SizeOfFigure);
        end;
    end;
end;


end.
